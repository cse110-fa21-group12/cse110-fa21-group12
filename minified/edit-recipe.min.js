const id = localStorage.getItem("id");
fetch("/recipes/" + id, {
  method: "GET",
  headers: {
    "Access-Control-Allow-Origin": "*",
    "Access-Control-Allow-Headers": "Content-Type",
    "Access-Control-Allow-Methods": "GET,POST,OPTIONS,DELETE,PUT,PATCH",
  },
})
  .then((a) => a.json())
  .then((a) => {
    console.log("Success:", a);
    const b = document.getElementById("title");
    b.defaultValue = a.title;
    const c = document.getElementById("description");
    c.defaultValue = a.description;
    const d = document.getElementById("enter-categories");
    for (let b = 0; b < a.categories.length; b++) {
      const c = document.createElement("input");
      (c.defaultValue = a.categories[b]),
        c.classList.add("input-field", "categories"),
        c.setAttribute("id", "categories"),
        d.appendChild(document.createElement("br")),
        d.appendChild(c),
        d.appendChild(document.createElement("br"));
    }
    const e = document.getElementById("enter-tags");
    for (let b = 0; b < a.tags.length; b++) {
      const c = document.createElement("input");
      (c.defaultValue = a.tags[b]),
        c.classList.add("input-field", "tags"),
        c.setAttribute("id", "tags"),
        e.appendChild(document.createElement("br")),
        e.appendChild(c),
        e.appendChild(document.createElement("br"));
    }
    const f = document.getElementById("prep-time");
    f.defaultValue = a.preparationTime;
    const g = document.getElementById("cook-time");
    g.defaultValue = a.cookingTime;
    const h = document.getElementById("total-time");
    h.defaultValue = a.totalTime;
    const i = document.getElementById("file-ip-1");
    i.defaultValue = a.img;
    const j = document.getElementById("ingredients-form"),
      k = Object.keys(a.ingredients);
    for (let b = 0; b < k.length; b++) {
      const c = document.createElement("input"),
        d = document.createElement("input");
      (c.defaultValue = k[b]),
        c.setAttribute("class", "ingredient"),
        d.setAttribute("class", "quantity"),
        (d.defaultValue = a.ingredients[k[b]]),
        j.appendChild(d),
        j.appendChild(c);
    }
    const l = document.getElementById("enter-directions");
    for (let b = 0; b < a.directions.length; b++) {
      const c = document.createElement("input");
      (c.defaultValue = a.directions[b]),
        c.setAttribute("class", "directions"),
        l.appendChild(document.createElement("br")),
        l.appendChild(c),
        l.appendChild(document.createElement("br"));
    }
  });
const addCategoryButton = document.getElementById("add-category"),
  categoriesForm = document.getElementById("enter-categories");
addCategoryButton.addEventListener("click", function () {
  const a = document.createElement("input");
  (a.placeholder = "Category"),
    a.classList.add("input-field", "categories"),
    a.setAttribute("id", "categories"),
    categoriesForm.appendChild(a);
});
const addTagButton = document.getElementById("add-tag"),
  tagsForm = document.getElementById("enter-tags");
addTagButton.addEventListener("click", function () {
  const a = document.createElement("input");
  (a.placeholder = "Tag"),
    a.classList.add("input-field", "tags"),
    a.setAttribute("id", "tags"),
    tagsForm.appendChild(a);
});
const addIngredientButton = document.getElementById("add-ingredient-button"),
  ingredientsForm = document.getElementById("ingredients-form");
addIngredientButton.addEventListener("click", function () {
  const a = document.createElement("input"),
    b = document.createElement("input");
  (a.placeholder = "Ingredient Name"),
    a.setAttribute("class", "ingredient"),
    b.setAttribute("class", "quantity"),
    (b.placeholder = "Amount"),
    ingredientsForm.appendChild(b),
    ingredientsForm.appendChild(a),
    ingredientsForm.appendChild(document.createElement("br"));
});
const addDirectionsButton = document.getElementById("add-directions-button"),
  directionsForm = document.getElementById("enter-directions");
let j = 0;
addDirectionsButton.addEventListener("click", function () {
  const a = document.createElement("input");
  (a.placeholder = "New Step"),
    j++,
    a.setAttribute("class", "directions"),
    directionsForm.appendChild(document.createElement("br")),
    directionsForm.appendChild(a),
    directionsForm.appendChild(document.createElement("br"));
});
const saveRecipeButton = document.getElementById("save-recipe");
saveRecipeButton.addEventListener("click", () => {
  const a = document.getElementById("title").value,
    b = document.getElementById("description").value,
    c = document.getElementsByClassName("categories"),
    d = document.getElementsByClassName("tags"),
    e = document.getElementById("prep-time").value,
    f = document.getElementById("cook-time").value,
    g = document.getElementById("total-time").value,
    h = document.getElementsByClassName("ingredient"),
    j = document.getElementsByClassName("quantity"),
    k = {},
    l = [];
  for (let a = 0; a < c.length; a++) l[a] = c[a].value;
  const m = [];
  for (let a = 0; a < d.length; a++) m[a] = d[a].value;
  for (let a = 0; a < h.length; a++) k[h[a].value] = j[a].value;
  const n = document.getElementsByClassName("directions"),
    o = [];
  for (let a = 0; a < n.length; a++) o[a] = n[a].value;
  const p = JSON.stringify({
      id: a,
      title: a,
      description: b,
      categories: l,
      tags: m,
      preparationTime: e,
      cookingTime: f,
      totalTime: g,
      ingredients: k,
      directions: o,
    }),
    q = document.getElementById("file-ip-1"),
    r = new FormData();
  r.append("json", p),
    r.append("img", q.files[0]),
    fetch("/recipes/edit", { method: "PUT", body: r })
      .then((a) => a.json())
      .then((a) => {
        console.log("Success:", a),
          console.log("Success:", a),
          a.error
            ? a.error.includes(
                "Function DocumentReference.set() called with"
              ) && alert("Please fill in all elements")
            : (setTimeout(1e3), (location.href = "recipe.html"));
      })
      .catch((a) => {
        console.error("Error:", a);
      });
});
