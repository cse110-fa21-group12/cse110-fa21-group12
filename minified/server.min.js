const http=require("http"),Router=require("./router/router"),status=require("./utils/status"),{addProperties}=require("./utils/util");class Server extends Router{static get Router(){return Router}static get JsonParser(){return(a,b,c)=>{let d="";a.on("data",a=>{d+=a.toString()}),a.on("end",()=>{try{a.body=d?JSON.parse(d):{}}catch(b){console.log(`failed parsing as json - ${b}`),a.body=d}c()})}}constructor(){super()}handler(a,b){a&&(addProperties(a,b),this._handle(a,b,a=>{a?(console.log(a),b.writeHead(status.INTERNAL_SERVER_ERROR),b.end("Internal Server Error")):(b.writeHead(status.NOT_FOUND,{"Content-Type":"text/plain"}),b.end(status.NOT_FOUND))}))}listen(a,b){return http.createServer((a,b)=>{addProperties(a,b),this._handle(a,b,a=>{a?(console.log(a),b.writeHead(status.INTERNAL_SERVER_ERROR),b.end("Internal Server Error")):(b.writeHead(status.NOT_FOUND,{"Content-Type":"text/plain"}),b.end(status.NOT_FOUND))})}).listen({port:a},b)}}module.exports=Server;